name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build and start Docker containers using docker-compose
      - name: Build and run docker-compose
        run: |
          docker-compose -f docker-compose.yml build
      - name: Run database build script
        run: |
          docker-compose exec -T app bash scripts/build_db.sh

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          # Install SSH client
          sudo apt-get update && sudo apt-get install -y openssh-client

          # Set up SSH key
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

          # Copy files to remote server
          rsync -avz --progress -e "ssh -i ~/.ssh/id_rsa" ./ $SSH_USER@$SSH_HOST:$DEPLOY_PATH

          # SSH into the server and run deployment commands
          ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST << 'EOF'
            cd $DEPLOY_PATH
            docker-compose -f docker-compose.yml down --volumes  # Stop existing containers
            docker-compose -f docker-compose.yml up -d --build   # Start new containers
            docker-compose exec -T <service_name> bash scripts/build_db.sh  # Run the script
          EOF
